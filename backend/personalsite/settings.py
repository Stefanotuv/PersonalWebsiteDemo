"""
Django settings for personalsite project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from pathlib import Path
import dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!
DEBUG = True

ALLOWED_HOSTS = ['*']
SECRET_KEY = 'django-insecure-5js#*w=)k=*_4k1&%2ljy@o#3rqwrrqtgk+_(dixutpx4y912j'

# Load .env file
dotenv_file = BASE_DIR / ".env"
if dotenv_file.is_file():
    dotenv.load_dotenv(dotenv_file)

DEPLOYMENT_ENV = os.environ.get('DEPLOYMENT', 'LOCALDEV').upper()

if DEPLOYMENT_ENV == 'LOCALDEV':
    SECRET_KEY = os.environ.get('SECRET_KEY')
elif DEPLOYMENT_ENV == 'PROD':
    SECRET_KEY = os.environ.get('SECRET_KEY_PROD')
else:
    SECRET_KEY = os.environ.get('SECRET_KEY')


if DEPLOYMENT_ENV == 'PROD':
    FRONTEND_URL = os.environ.get('FRONTEND_URL_PROD', 'https://www.project-good.com')
    # Media/Static files typically served from the same domain as frontend in this setup
    MEDIA_STATIC_BASE_URL = FRONTEND_URL
elif DEPLOYMENT_ENV == 'PREVIEW':
    FRONTEND_URL = os.environ.get('FRONTEND_URL_PREVIEW', 'https://preview.project-good.com')
    MEDIA_STATIC_BASE_URL = FRONTEND_URL
elif DEPLOYMENT_ENV == 'TEST':
    FRONTEND_URL = os.environ.get('FRONTEND_URL_TEST', 'https://test.project-good.com')
    MEDIA_STATIC_BASE_URL = FRONTEND_URL
elif DEPLOYMENT_ENV == 'LOCAL_PREVIEW': # Assuming local preview is still served via a dev server
    FRONTEND_URL = os.environ.get('FRONTEND_URL_LOCAL_PREVIEW', 'http://localhost:3000')
    MEDIA_STATIC_BASE_URL = FRONTEND_URL # Media served by Nginx/Caddy behind frontend
elif DEPLOYMENT_ENV == 'LOCAL_TEST': # Assuming local test is still served via a dev server
    FRONTEND_URL = os.environ.get('FRONTEND_URL_LOCAL_TEST', 'http://localhost:3000')
    MEDIA_STATIC_BASE_URL = FRONTEND_URL # Media served by Nginx/Caddy behind frontend
else:  # LOCALDEV (default)
    FRONTEND_URL = os.environ.get('FRONTEND_URL_LOCALDEV', 'http://localhost:3000')
    # For local dev, Django's dev server handles media on its own, often on the Django port.
    # So, MEDIA_URL will explicitly point to Django's dev server.
    # STATIC_URL will also point to Django's dev server.
    MEDIA_STATIC_BASE_URL = 'http://localhost:8000' # Django dev server default



STATIC_URL = f"{MEDIA_STATIC_BASE_URL}/static/"
STATIC_ROOT = BASE_DIR / "staticfiles" # For collectstatic

# SECURITY WARNING: don't run with debug turned on in production!


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',



# Third-party apps
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',


    'users',
    'document_store',
    'photo_store',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Add this, usually high up

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



ROOT_URLCONF = 'personalsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personalsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Add these configurations at the end of the file
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://localhost:5173",  # <-- IMPORTANT: This is the default port for Vite
#     "http://127.0.0.1:5173",  # Include this as well, just in case
# ]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_ORIGINS = True
CSRF_TRUSTED_ORIGINS = [
    'capacitor://localhost',
    'ionic://localhost',
    'app://localhost',
    "http://localhost:8000",
    "http://10.0.2.2:8000", # Android Emulator
    "http://127.0.0.1:8000",
    "http://localhost:5173", # Common React Dev Server (Vite)
    "http://127.0.0.1:5173",
    "http://localhost:3000", # Common React Dev Server (CRA)
    "http://127.0.0.1:3000",
    os.environ.get('FRONTEND_URL_LOCALDEV', 'http://localhost:3000'), # Default local frontend URL
    # Add your specific local network IPs if needed for mobile device testing on LAN
    # e.g., "http://192.168.1.XXX:3000"
]
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False



AUTH_USER_MODEL = 'users.CustomUser'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # Make sure BASE_DIR is correctly defined (it should be)

# email confirmation settings
EMAIL_BACKEND = os.environ['EMAIL_BACKEND']
EMAIL_HOST = os.environ['EMAIL_HOST']
EMAIL_PORT = int(os.environ['EMAIL_PORT'])
EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
# EMAIL_USE_SSL = os.environ['EMAIL_USE_SSL']
EMAIL_USE_TLS = os.environ['EMAIL_USE_TLS']
ADMIN_NOTIFICATION_EMAIL=os.environ['ADMIN_NOTIFICATION_EMAIL']
DEFAULT_FROM_EMAIL=os.environ['DEFAULT_FROM_EMAIL']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO', # You can set this to DEBUG for even more detail
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
        # This will make sure logs from your 'users' app are captured
        'users': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}