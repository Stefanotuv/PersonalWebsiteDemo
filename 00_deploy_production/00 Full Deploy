# 141.147.77.217 demopersonalwebsite


sudo chmod 600 /Users/stefanotuveri/.ssh/ssh-demopersonalwebsite.key


ssh -i /Users/stefanotuveri/.ssh/ssh-demopersonalwebsite.key ubuntu@141.147.77.217

sudo apt update && sudo apt upgrade -y && sudo apt install python3-pip python3-venv gunicorn nginx git -y

sudo apt install python3-dev nginx build-essential

sudo reboot now

git clone https://github.com/Stefanotuv/PersonalWebsiteDemo.git


# rm -rf venvpersonalwebsite

cd /home/ubuntu/PersonalWebsiteDemo/backend

python3 -m venv venvpersonalwebsite
source venvpersonalwebsite/bin/activate

pip install --upgrade pip


pip install -r requirements.txt
scp -i /Users/stefanotuveri/.ssh/ssh-demopersonalwebsite.key /Users/stefanotuveri/OracleContent/PersonalWebsiteDemo/backend/.env ubuntu@141.147.77.217:/home/ubuntu/PersonalWebsiteDemo/backend/.env


*********************
npm run build:web
cp -r /Users/stefanotuveri/OracleContent/PersonalWebsiteDemo/frontend/dist_web/* /Users/stefanotuveri/OracleContent/PersonalWebsiteDemo/backend/dist_prod
***********************

cp -r /home/ubuntu/PersonalWebsite/backend/dist_prod/* /home/ubuntu/PersonalWebsite/backend/staticfiles/

# Create directories for the certificates
sudo mkdir -p /etc/ssl/certs
sudo mkdir -p /etc/ssl/private


Log in to your Cloudflare Dashboard.
Select your domain.
Go to SSL/TLS -> Origin Server.
Click Create Certificate.
Leave the default settings (private key type RSA, hostnames *.yourdomain.com, yourdomain.com).
Click Create.
Cloudflare will show you two text blocks: Origin Certificate and Private Key. This is the only time you will see the Private Key.

# Create and open the certificate file
sudo nano /etc/ssl/certs/stefanotuveri.com.pem

sudo nano /etc/ssl/private/stefanotuveri.com.key

sudo chmod 600 /etc/ssl/private/stefanotuveri.com.key


sudo nano /etc/systemd/system/gunicorn.socket
# ---------------------------------------------------------------------------
[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock
SocketUser=www-data  # <-- This is the magic. The socket is owned by www-data
SocketGroup=www-data # <-- So Nginx can access it.
SocketMode=0660      # <-- Sets read/write permissions for user and group

[Install]
WantedBy=sockets.target
# ---------------------------------------------------------------------------

sudo nano /etc/systemd/system/gunicorn.service


# ---------------------------------------------------------------------------
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/PersonalWebsite/backend
ExecStart=/home/ubuntu/PersonalWebsite/backend/venvpersonalwebsite/bin/gunicorn --access-logfile - --workers 3 --bind unix:/run/gunicorn.sock personalsite.wsgi:application

[Install]
WantedBy=multi-user.target
# ---------------------------------------------------------------------------


sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

sudo chown ubuntu:www-data /run/gunicorn.sock
sudo chmod 660 /run/gunicorn.sock
sudo systemctl status gunicorn.socket


sudo nano /etc/nginx/sites-available/personalwebsite


server {
    listen 80;
    server_name stefanotuveri.com www.stefanotuveri.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name stefanotuveri.com www.stefanotuveri.com;

    # SSL Configuration using Cloudflare Origin Certificate
    ssl_certificate /etc/ssl/certs/stefanotuveri.com.pem;
    ssl_certificate_key /etc/ssl/private/stefanotuveri.com.key;

    # Location of React build files
    location / {
        root /home/ubuntu/PersonalWebsite/backend/staticfiles/;
        try_files $uri $uri/ /index.html;
    }

    # Location for user-uploaded media files
    location /media/ {
        alias /home/ubuntu/PersonalWebsite/backend/media/;
    }

    # Location for Django's collected static files (for admin)
    location /static/ {
        alias /home/ubuntu/PersonalWebsite/backend/staticfiles/;
    }

    # Proxy for API and Admin requests to Gunicorn
    location ~ ^/(api|admin)/ {
        proxy_pass http://unix:/home/ubuntu/PersonalWebsite/personalwebsite.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

sudo gpasswd -a www-data ubuntu
sudo -u www-data stat /home/ubuntu/PersonalWebsite/backend/staticfiles


sudo ln -s /etc/nginx/sites-available/personalwebsite /etc/nginx/sites-enabled/

sudo systemctl daemon-reload

sudo systemctl restart gunicorn && sudo systemctl restart nginx && sudo systemctl reload nginx













